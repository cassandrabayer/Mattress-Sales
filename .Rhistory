setkey(returnsByMonth, month)
setkey(ordersByMonth, month)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth <- returnsByMonth[!is.na(month), returnRate := returns/orders, by = month]
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = month(datereturned)]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = month(dateordered)]
setkey(returnsByMonth, month)
setkey(ordersByMonth, month)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth[!is.na(month), returnRate := returns/orders, by = month]
returnsByMonth
returnsByMonth <- returnsByMonth[!is.na(month)]
returnsByMonth
p <- plot_ly(returnsByMonth, x = ~month) %>%
add_trace(y = ~orders, name = 'Orders',mode = 'lines') %>%
add_trace(y = ~returns, name = 'Returns', mode = 'lines')
p
sapply(returnsByMonth, class)
returnsByMonth[, month := as.Date(month)]
returnsByMonth
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = month(datereturned)]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = month(dateordered)]
setkey(returnsByMonth, month)
setkey(ordersByMonth, month)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth[!is.na(month), returnRate := returns/orders, by = month]
returnsByMonth <- returnsByMonth[!is.na(month)]
library(lubridate)
returnsByMonth[, month := month.abb(month)]
month.name(returnsByMonth$month)
month.name
month.name[[1]]
returnsByMonth[, monthName := month.name[[month]]]
returnsByMonth[, monthName := month.name[[month]]]
returnsByMonth[, monthName := lapply(month, function (x) month.name[[x]])]
returnsByMonth
returnsByMonth[, monthName := lapply(returnsByMonth$month, function (x) month.name[[x]])]
returnsByMonth
month.name[[returnsByMonth[1]]]
month.name[[returnsByMonth[1, orders]]]
month.name[[returnsByMonth[1, month]]]
returnsByMonth[, monthName := lapply(returnsByMonth$month, function (x) month.name[[x, month]])]
returnsByMonth[, monthName := lapply(returnsByMonth$month, function (x) month.name[[returnsByMont[x, month]]])]
returnsByMonth[, monthName := lapply(returnsByMonth$month, function (x) month.name[[returnsByMonth[x, month]]])]
returnsByMonth[, monthName := lapply(month, function (x) month.name[[returnsByMonth[x, month]]])]
returnsByMonth[, monthName := month.name[[returnsByMonth[x, month]]]]
returnsByMonth[, monthName := month.name[[returnsByMonth[, month]]]]
returnsByMonth$monthName <- month.name[ returnsByMonth$month ]
returnsByMonth
returnsByMonth[, as.Date(monthName)]
returnsByMonth
returnsByMonth[c(2:nrow(returnsByMonth), 1)]
returnsByMonth <- returnsByMonth[c(2:nrow(returnsByMonth), 1)]
p <- plot_ly(returnsByMonth, x = ~monthName) %>%
add_trace(y = ~orders, name = 'Orders',mode = 'lines') %>%
add_trace(y = ~returns, name = 'Returns', mode = 'lines')
p
returnRate[, returnRate := round(returnRate,2)*100]
returnRate
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = month(dateordered)]
summary(returnRate)
returnRate[, returnRate := round(returnRate,2)]
returnRate
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
returnsByMonth$monthName <- month.name[ returnsByMonth$month]
sapply(orders, class)
summary(orders)
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(month(dateordered), monthName)]
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders$monthName <- month.name[ returnsByMonth$month]
orders
orders[is.na(monthName)]
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders$monthName <- month.name[ returnsByMonth$month(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ returnsByMonth$month]
orders$monthName <- month.name[ orders$month(dateordered)]
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ orders$month]
orders
sapply(orders, class)
summary(orders)
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(month(dateordered), monthName)]
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(month, monthName)]
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = monthName]
summary(returnRate)
returnRate[, returnRate := round(returnRate,2)]
returnRate <- orders[, .(returnRate = round(sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),2),
by = monthName]
returnRate
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = monthName]
returnRate
returnRate[, returnRate := round(returnRate,2)]
returnRate
p1 <- plot_ly(returnRate, x = ~monthName) %>%
add_trace(y = ~returnRate, name = 'Return Rate',mode = 'lines')
p1
plot_ly(returnRate, x = ~monthName, type = 'scatter', mode = 'lines') %>%
add_trace(y = ~returnRate, name = 'Return Rate',mode = 'lines')
plot_ly(returnRate, x = ~monthName, mode = 'lines') %>%
add_trace(y = ~returnRate, name = 'Return Rate',mode = 'lines')
returnRate
plot_ly(returnRate, x = ~monthName, y =  ~returnRate,mode = 'lines')
plot_ly(returnRate, x = ~monthName, y =  ~returnRate,mode = 'lines', colors = "Set1")
plot_ly(returnRate, x = ~monthName, y =  ~returnRate,mode = 'lines', colors = "Set1")
plot_ly(returnRate, x = ~monthName, y =  ~returnRate,mode = 'scatter', colors = "Set1")
xOrder <- c("August", "September", "October", "November", "December")
plot_ly(data = returnRate,
x = ~monthName,
y =  ~returnRate,
mode = 'lines',
colors = "Set1") %>%
layout(xaxis = xOrder)
returnRate
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(monthName, month)]
returnRate[, returnRate := round(returnRate,2)]
summary(returnRate)
plot_ly(data = returnRate,
x = ~month,
y =  ~returnRate,
mode = 'lines',
colors = "Set1")
plot_ly(data = returnRate,
x = ~monthName,
y =  ~returnRate,
mode = 'lines',
colors = "Set1")
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T),
orders = sum(orders[orderstatus == "completed"], na.rm = T)),
by = .(monthName, month)]
returnRate
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T),
orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(monthName, month)]
returnRate
returnRate[, returnRate := round(returnRate,2)]
ggplot(data=returnRate, aes(x = monthDate, y = returnRate, size = orders)) +
geom_line() + theme_minimal()
ggplot(data=returnRate, aes(x = monthName, y = returnRate, size = orders)) +
geom_line() + theme_minimal()
ggplot(data=returnRate, aes(x = monthName, y = returnRate)) +
geom_line() + theme_minimal()
ggplot(data=returnRate, aes(x = monthName, y = returnRate)) +
geom_point() + theme_minimal()
returnRate
plot(returnRate$monthName, returnRate$returnRate)
plot_ly(data = returnRate,
x = ~monthName,
y =  ~returnRate,
mode = 'lines',
colors = "Set1")
plot_ly(data = returnRate,
x = ~monthName,
y =  ~returnRate,
mode = 'lines',
colors = "Set1")
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = .(month(datereturned), monthName)]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(month(dateordered), monthName)]
setkey(returnsByMonth, month)
setkey(ordersByMonth, month)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth[!is.na(month), returnRate := returns/orders, by = month]
returnsByMonth <- returnsByMonth[!is.na(month)]
returnsByMonth <- returnsByMonth[c(2:nrow(returnsByMonth), 1)]
p <- plot_ly(returnsByMonth, x = ~monthName) %>%
add_trace(y = ~orders, name = 'Orders',mode = 'lines') %>%
add_trace(y = ~returns, name = 'Returns', mode = 'lines')
plot_ly(returnsByMonth, x = ~monthName) %>%
add_trace(y = ~orders, name = 'Orders',mode = 'lines') %>%
add_trace(y = ~returns, name = 'Returns', mode = 'lines')
casper_orders <- orders
sqldf("select * from casper_orders limit 10;")
sqldf("select count(*) from casper_orders where orderstatus = 'complete' group by dateordered;")
sqldf("select count(*) as totalOrders, dateordered from casper_orders where orderstatus = 'complete';")
sqldf("select count(*) as totalOrders, dateordered from casper_orders where orderstatus = 'complete' group by dateordered;")
sqldf("select count(*) as totalOrders, dateordered from casper_orders where orderstatus = 'complete' group by dateordered;")
sqldf("select sum(orders) as totalOrders, dateordered from casper_orders where orderstatus = 'complete' group by dateordered;")
sqldf("select sum(orders) as totalOrders, dateordered from casper_orders where orderstatus = 'complete' group by SUBSTRING(dateordered, 6, 7);")
sqldf("select sum(orders) as totalOrders, SUBSTRING(dateordered, 6, 7) as month from casper_orders where orderstatus = 'complete' group by month;")
sqldf("select substring(dateordered, 1,2) from casper_orders limit 10;")
sqldf("select sum(orders) as totalOrders, SUBSTR(dateordered, 6, 7) as month from casper_orders where orderstatus = 'complete' group by month;")
sqldf("select substr(dateordered, 1,2) from casper_orders limit 10;")
sqldf("select substr(dateordered, 6, 7), dateordered from casper_orders limit 10;")
sqldf("select sum(orders) as totalOrders, EXTRACT(month from dateordered) as month from casper_orders where orderstatus = 'complete' group by month;")
sqldf("select sum(orders) as totalOrders, EXTRACT(month FROM dateordered) as month from casper_orders where orderstatus = 'complete' group by month;")
sqldf("select sum(orders) as totalOrders, EXTRACT(month from dateordered) as month from casper_orders where orderstatus = 'complete' group by month;")
sqldf("select sum(orders) as totalOrders, EXTRACT(month, dateordered) as month from casper_orders where orderstatus = 'complete' group by month;")
sqldf("select sum(orders) as totalOrders, EXTRACT(MONTH from dateordered) as month from casper_orders where orderstatus = 'complete' group by month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered, 5, 6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("select * from casper_orders limit 10;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered, 6, 8) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered, 6, 7) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered, 5, 6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("select * from casper_orders limit 10;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered,6, 8) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered, 7, 8) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered, 8, 10) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(dateordered, 5, 8) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
MONTH(dateordered) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
DATEPART(month, dateordered) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CONVERT(varchar(10), dateordered), 5, 6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CAST(dateordered as CHAR(10)), 5, 6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CAST(dateordered as CHAR(10)), 6, 7) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CAST(dateordered as CHAR(10)), 6, 8) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CAST(dateordered as CHAR(10)), 8, 8) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("select * from casper_orders limit 10;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CAST(dateordered as CHAR),5,6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CAST(dateordered as datetime),5,6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("select * from casper_orders limit 10;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CAST(dateordered as datetime, 111),5,6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CONVERT(dateordered, datetime, 111),5,6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
sqldf("SELECT SUM(orders) as totalOrders,
SUBSTR(CONVERT(datetime,dateordered, 111),5,6) as month
FROM casper_orders WHERE orderstatus = 'complete'
GROUP BY month;")
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ orders$month]
sapply(orders, class)
summary(orders)
returnRate <- orders[, .(returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T),
orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(monthName, month)]
returnRate[, returnRate := round(returnRate,2)]
summary(returnRate)
plot_ly(data = returnRate,
x = ~monthName,
y =  ~returnRate,
mode = 'lines',
colors = "Set1")
returnRate
returnRate <- orders[, .( orders = sum(orders[orderstatus == "complete"], na.rm = T),
returns = sum(orders[orderstatus == "returned"], na.rm = T),
returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(monthName, month)]
returnRate[, returnRate := round(returnRate,2)]
returnRate
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = .(month(datereturned), monthName)]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(month(dateordered), monthName)]
setkey(returnsByMonth, month)
setkey(ordersByMonth, month)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth[!is.na(month), returnRate := returns/orders, by = month]
returnsByMonth <- returnsByMonth[!is.na(month)]
returnsByMonth <- returnsByMonth[c(2:nrow(returnsByMonth), 1)]
plot_ly(returnsByMonth, x = ~monthName) %>%
add_trace(y = ~orders, name = 'Orders',mode = 'lines') %>%
add_trace(y = ~returns, name = 'Returns', mode = 'lines')
returnsByMonth
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = .(month(datereturned), monthName)]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(month(dateordered), monthName)]
setkey(returnsByMonth, month)
setkey(ordersByMonth, month)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = .(month(datereturned), monthName)]
returnsByMonth
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = .(monthName)]
returnsByMonth
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = monthName]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = monthName]
setkey(returnsByMonth, monthName)
setkey(ordersByMonth, monthName)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth[!is.na(month), returnRate := returns/orders, by = month]
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth[!is.na(monthName), returnRate := returns/orders, by = monthName]
returnsByMonth
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = monthName]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = monthName]
returnsByMonth
ordersByMonth
setkey(returnsByMonth, monthName)
setkey(ordersByMonth, monthName)
returnsByMonth <- ordersByMonth[returnsByMonth]
returnsByMonth
returnsByMonth[!is.na(monthName), returnRate := returns/orders, by = monthName]
returnsByMonth
returnsByMonth <- returnsByMonth[c(1, 5, 4, 3, 2)]
returnsByMonth
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = monthName]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = monthName]
returnsByMonth
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ orders$month]
sapply(orders, class)
summary(orders)
orders[, .N, by = monthName]
orders
orders[sort(dateordered)]
orders[]sort(dateordered)
orders[][order(dateordered)]
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders[, .N, by = month(dateordered)]
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ orders$month]
sapply(orders, class)
summary(orders)
returnRate <- orders[, .( orders = sum(orders[orderstatus == "complete"], na.rm = T),
returns = sum(orders[orderstatus == "returned"], na.rm = T),
returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(monthName, month)]
returnRate[, returnRate := round(returnRate,2)]
summary(returnRate)
returnRate
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
orders <- orders[, 1:4][order(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ orders$month]
sapply(orders, class)
summary(orders)
returnRate <- orders[, .( orders = sum(orders[orderstatus == "complete"], na.rm = T),
returns = sum(orders[orderstatus == "returned"], na.rm = T),
returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(monthName, month)]
returnRate[, returnRate := round(returnRate,2)]
summary(returnRate)
plot_ly(data = returnRate,
x = ~monthName,
y =  ~returnRate,
mode = 'lines',
colors = "Set1")
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
## clean up data
orders <- orders[, 1:4][order(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ orders$month]
## descriptives
sapply(orders, class)
summary(orders)
orders <- data.table(read.xlsx2(file = "XLS_takehome_NA.xlsx",
sheetName = "Orders",
stringsAsFactors = F,
colClasses = c("Date", "Date", "character", "numeric")))
## clean up data
orders <- orders[, 1:4][order(dateordered)]
orders[, month := month(dateordered)]
orders$monthName <- month.name[ orders$month]
## descriptives
sapply(orders, class)
summary(orders)
returnRate <- orders[, .( orders = sum(orders[orderstatus == "complete"], na.rm = T),
returns = sum(orders[orderstatus == "returned"], na.rm = T),
returnRate = sum(orders[orderstatus == "returned"], na.rm = T)/
sum(orders[orderstatus == "complete"], na.rm = T)),
by = .(monthName, month)]
## clean up
returnRate[, returnRate := round(returnRate,2)]
summary(returnRate)
## plot
plot_ly(data = returnRate,
x = ~monthName,
y =  ~returnRate,
mode = 'lines',
colors = "Set1")
returnsByMonth <- orders[, .(returns = sum(orders[orderstatus == "returned"], na.rm = T)),
by = monthName]
ordersByMonth <- orders[, .(orders = sum(orders[orderstatus == "complete"], na.rm = T)),
by = monthName]
## join
setkey(returnsByMonth, monthName)
setkey(ordersByMonth, monthName)
returnsByMonth <- ordersByMonth[returnsByMonth]
## clean up
returnsByMonth[!is.na(monthName), returnRate := returns/orders, by = monthName]
returnsByMonth <- returnsByMonth[c(1, 5, 4, 3, 2)]
## plot
plot_ly(returnsByMonth, x = ~monthName) %>%
add_trace(y = ~orders, name = 'Orders',mode = 'lines') %>%
add_trace(y = ~returns, name = 'Returns', mode = 'lines')
casper_orders <- orders
sqldf("SELECT SUM(orders) as totalOrders, dateordered
FROM casper_orders
WHERE orderstatus = 'complete'
GROUP BY dateordered;")
